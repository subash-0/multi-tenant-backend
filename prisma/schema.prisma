// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  belongToId  String
  belongTo    User     @relation(fields: [belongToId], references: [id])
  updates     Update[]

  @@index([id,belongToId])
}

enum UpdateStatus {
  IN_PROGRESS
  SHIPPED
  DEPRECATED
}

model Update {
  id           String        @id @default(uuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  title        String
  body         String
  status       UpdateStatus  @default(IN_PROGRESS)
  version      String?
  asset        String?
  productId    String
  product      Product       @relation(fields: [productId], references: [id])
  updatePoints UpdatePoint[]
}

model UpdatePoint {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  name      String @db.VarChar(255)
  description String


  updatedAt DateTime @updatedAt
  updateId  String
  update    Update   @relation(fields: [updateId], references: [id])
}
